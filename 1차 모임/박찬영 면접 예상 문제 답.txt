1. Framework

   ① 특정 형태의 소프트웨어 문제를 해결하기 위해, 상호 협력하는 클래스들과 인터페이스의 집합

   ② 장점 : 재사용성, 단순성, 역할구분, 확장성, 유지보수 용이 

   ③ 라이브러리와 프레임워크의 차이
      •  라이브러리는 어플리케이션에서 호출할 수 있는 함수와 루틴으로 구성되어 있음
      •  프레임워크는 어플리케이션에서 특정 기능들을 제공하기 위해 확장할 수 있는 일반적이고 상호 협력적인 컴포넌트를 제공

2. MVC 패턴이란?

    ∘ Model, View, Control 의 역할을 확실하게 분리시켜 놓는 프로그래밍 기법.

3. 객체(object)

    ∘ 효율적으로 정보를관리하기위하여 사람들이 의미를 부여하고 분류하는 논리적인 단위.

      프로그래밍에서는 클래스에 정의된 내용대로 메모리에 생성된 것을 말함.

4. 스레드(Multi threaded)

    ∘ 하나의 프로그램이 동시에 하나 이상의 처리(process)를 수행하는 것을 의미한다
5. JVM의 구성

   ① 클래스영역 : 클래스 코드를 저장하는 영역.

   ② 자바스택   : method를 호출할 때 관련 정보를 저장하는 영역.

   ③ 힙(Heap)  : new 라는 키워드를 통해 객체가 생성될 때 할당받는 영역.

   ④ 네이티브 method 스택


6. Collection에서 데이터를 저장 하는 3가지와 그 특징

   ① Set  : 순서가 없고, 동일한 데이터 허용 안 됨.

   ② List  : 배열과 같은 구조지만, 가변적 길이를 가지고 있음. (크기가 지정 되어있지 않음.)

   ③ Map : key 값과 value값의 형식으로 저장되면 key값은 절대 중복이 안 됨.

7. 동기화

    ∘ 여러 명이 접근 하는 것을 방지하기 위함. 이때 여러 명이 접근 하는 것을 막기 위해 모든 객체에 ‘락’을 포함 시키는데, ‘락’이란 공유 객체에 여러 스레드가 동시에 접근하지 못하도록 하기 위한 것으로 모든 객체가 힙 영역에 생성될 때 자동으로 만들어 짐.


8. 더블버퍼링을 사용하는 이유

    ∘ 이미지를 출력 시키는 경우 화면을 지웠다가 다시 그리게 되면 깜박거리게 됨. 이러한 문제점의 해결을 위해, 화면에 직접 이미지를 그리지 않고 메모리상에 미리 그려놓고 필요할 때 한번만 화면에 출력 시키는 방법으로 출력 시 깜박거림을 최소화 시켜줌.

9. Cookie 와 Session 의 차이

   ① Cookie  : 클라이언트에 정보를 저장하기 때문에 서버에 부하가 없음.

                사라지는 때(시간)를 지정 할 수가 있음.

   ② Session : 서버에 정보를 저장하기 때문에 서버에 부하가 많이 생김.

                해당 클라이언트와 일정시간동안 작용이 없으면 서버메모리에서 해제 됨.

                직접적으로 해제 시킬 수 있는 method가 있음.


10. JSP 와 자바스크립트의 차이

    ∘ JSP는 자바에서 파생된 서버사이드 스크립트로서 웹 페이지를 작성하는데 사용.

    ∘ 자바스크립트는 클라이언트사이드 스크립트이며, 브라우저의 객체를 제어하는데 쓰임.


11. AJAX란?

   ① 웹클라이언트 화면 제어를 보다 세밀하게 하기 위한 기술.

   ② 특징

     • 필요한 데이터만 서버로 보내고 해당 정보만 받음.

     • 서버로부터 정보를 받을 때는 xml or josn 형태로 받고, Client에서는 그 정보들을 DOM을 통해 화면을 재가공하여 보여주므로 서버와 교환되는 데이터의 양이 적어지므로 점유율을 낮출 수 있음.

     • Client에서의 데이터 처리로 서버에 부담이 덜 가므로 다른 응답 요청에 신속히 응대.


12. OSI 7 Layers (OSI 7 계층 구조)

  - 7계층: 응    용   계층 (application  layer)

  - 6계층: 표    현   계층 (presentation layer)

  - 5계층: 세    션   계층 (session     layer)

  - 4계층: 전    송   계층 (transport    layer)

  - 3계층: 네트워크   계층 (network     layer)

  - 2계층: 데이터링크 계층 (data link    layer)

  - 1계층: 물    리   계층 (physical     layer)


13. DCL (Data Control Language)

      계정의 권한과 관계된 명령어.

      DB 사용자의 권한 정의.

    ∘ COMMIT : 데이터베이스 조작을 영구적으로 반영.

    ∘ ROLLBACK : 마지막 COMMIT 상태로 복구.

    ∘ GRANT : 권한 부여.                       

    ∘ REVOKE : 권한 취소.

14. DML (Data Manipulation Language)

      데이터 조작과 관계된 명령어.

      데이터의 검색 및 출력, 정렬과 조인에 관계 됨.

    ∘ SELECT : 데이터의 조회.                 

    ∘ INSERT : 데이터의 입력.

    ∘ UPDATE : 데이터의 수정.                

    ∘ DELETE : 데이터의 삭제.

    ∘ WHERE : 데이터의 조건.

    ∘ COMMIT : 수행한 데이터 작업들의 영구 저장.

    ∘ ROLLBACK : 수행한 데이터 작업들의 원상복구.


15. ERD(Entity Relationship Diagram)란?

    ∘ 개체관계도 : 말로 되어있는 요구분석사항을 그림으로 그려 그 관계를 도출하는 것.


16. 엔티티빈 (EntityBean)

    ∘ 데이터를 객체화하여 재사용이 가능한 컴포넌트를 말함.

    ∘ 데이터의 객체화란 개발자들이 데이터에 접근, 변경 방법이 보다 단순하고 쉬워진다는 의미. 

    ∘ 객체화된 데이터를 비지니스 객체 또는 현실 세계의 객체라고하며, 이 객체는 영속성을 가진 관계형 데이터베이스에 저장이 되고, 데이터베이스에서 테이블의 한 레코드와 대응됨.

    ∘ 여기서 중요한 것은 빈 인스턴스와 데이터베이스의 데이터가 동기화 되어야 한다는 것. 즉, 빈 인스턴스에서 새로운 변화가 일어날 때마다 데이터베이스도 같이 갱신이 되어야 함.

 
17. EJB의 사용 목적

    ∘ “대규모이고 구조가 복잡한 분산 객체 환경”을 쉽게 구현하기 위해서 등장.

    ∘ 컴포넌트(클래스들이 모여서 생긴 하나의 기능)들의 재사용을 목적.

    ∘ EnterpriseBean은 이식성이 좋음.

18. Connection Pool 개념

    ∘ 미리 생성해 놓은 커넥션을 할당하고 반납함으로써 커넥션 생성 시간을 줄인다는 개념.

    ∘ 미리 생성할 때 너무 조금 생성하면 오히려 타임 오버헤드가 늘어나고, 반대로 너무 많이 생성하면 메모리 오버헤드가 늘어남.

19. OverIoading , Overriding

   ① OverIoading (method 중복정의)

      - 기존의 method 인자를 이용하여 하나의 함수에 여러 가지 기능을 만드는 것.

   ② Overriding (method 재정의)

      - 상위 클래스에 있는 method와 똑같은 method를하위 클래스에 다시 만들기.

        즉 하위 클래스에서 method를 재정의하는 것.

        주로 생성자 method를 정의할 때 많이 사용.

20. XML이란?

   ① 사용자 정의 태그를 통해 텍스트 데이터의 구조화된 문서 저장과 application간의 문서교환을 위해 1986년 ISO에 제안된 마크업 언어.

      SGML의 일부 기능과 인터넷에서 이용하기 쉬운 HTML의 장점을 도입하여 개발한 언어